{'code': 'import sys\nimport collections\nimport re\n\ndef text_analyzer(input_file: str) -> dict:\n    # Валидация входных данных\n    if not isinstance(input_file, str) or not input_file.endswith(\'.txt\'):\n        raise ValueError("Input file must be a string ending with \'.txt\'")\n\n    try:\n        with open(input_file, \'r\', encoding=\'utf-8\') as file:\n            text = file.read()\n    except FileNotFoundError:\n        raise FileNotFoundError(f"The file \'{input_file}\' was not found.")\n    except Exception as e:\n        raise Exception(f"An error occurred while reading the file: {e}")\n\n    # Подсчет символов, слов и строк\n    total_characters = len(text)\n    total_lines = text.count(\'\\n\') + 1 if text else 0\n    words = re.findall(r\'\\b\\w+\\b\', text)\n    total_words = len(words)\n\n    # Подсчет наиболее часто встречающихся слов\n    word_counts = collections.Counter(words)\n    most_common_words = word_counts.most_common(10)\n\n    # Вычисление средней длины слова\n    average_word_length = sum(len(word) for word in words) / total_words if total_words > 0 else 0.0\n\n    # Нахождение самого длинного предложения\n    sentences = re.split(r\'[.!?]+\', text)\n    longest_sentence = max(sentences, key=len).strip() if sentences else ""\n\n    return {\n        "total_characters": total_characters,\n        "total_words": total_words,\n        "total_lines": total_lines,\n        "most_common_words": most_common_words,\n        "average_word_length": average_word_length,\n        "longest_sentence": longest_sentence\n    }\n\n# Пример использования\nif __name__ == "__main__":\n    if len(sys.argv) != 2:\n        print("Usage: python script.py <input_file.txt>")\n        sys.exit(1)\n\n    input_file = sys.argv[1]\n    try:\n        result = text_analyzer(input_file)\n        print(result)\n    except Exception as e:\n        print(f"Error: {e}")\n        sys.exit(1)', 'file_path': 'project/app.py', 'needs_execution': True}